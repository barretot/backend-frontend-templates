service: ${sls:stage}-${file(./package.json):name}
configValidationMode: error
deprecationNotificationMode: error
useDotenv: true

package:
  patterns:
    - "dist/**"           # Inclui o código transpilado
    - "!node_modules/**"  # Exclui dependências locais
    - "!layers/**"        # Exclui o diretório de Layers
    - "!.git/**"          # Exclui arquivos de controle de versão
    - "!.serverless/**"   # Exclui diretórios de build antigos
    - "!src/**"           # Exclui código fonte original
    - "!static/**"        # Exclui a pasta static
    - "!ymls/**"          # Exclui a pasta ymls
    - "!package.json"
    - "!package-lock.json"
    - "!README.md"
    - "!.env"             # Exclui arquivos de ambiente
    - "!.gitignore"       # Exclui o .gitignore

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  timeout: 30
  versionFunctions: false
  stage: ${opt:stage, 'dev'}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - "stepfunctions:*"
            - "logs:*"
            - "s3:*"
            - "rekognition:*"
            - "bedrock:*"
            - "dynamodb:*"
            - "textract:*"
            - "sqs:*"
            - "events:*"
            - "states:*"
          Resource: "*"

  stackTags:
    department: x.xxxxxxxx
    squad: x.xxxxxxxx
    projectName: x.xxxxxxxx
    project: hello lambda
    stage: ${sls:stage}
    env: ${opt:stage, 'dev'}
    version: ${file(./package.json):version}
  environment: ${file(ymls/environment.yml)}

layers:
  BkoLayer:
    name: bkoLayer
    package:
      artifact: layers/bkoLayer.zip
    compatibleRuntimes:
      - nodejs20.x
    compatibleArchitectures:
      - x86_64

functions: ${file(ymls/functions.yml)}

resources: ${file(ymls/resources.yml)}

custom: ${file(ymls/custom.yml)}
